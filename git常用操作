参考这个连接 ： https://www.cnblogs.com/dazhidacheng/p/7798358.html

注意：在将自己的分支合到公司的分支或者别人的分支之前，一定要找人确认之后再合并，以免引起风险


创建分支
创建一个新的分支指针。比如新建一个 testing 分支，可以使用 git branch 命令：
$ git branch testing


切换分支
要切换到其他分支，可以执行 git checkout 命令。我们现在转换到新建的 testing 分支：
$ git checkout testing
$ git pull
然后输入用户密码


新建分支同时切换到该分支
$ git checkout -b iss53
Switched to a new branch "iss53"
这相当于执行下面这两条命令：
$ git branch iss53
$ git checkout iss53


分支提交
$ vim test.rb
$ git commit -a -m 'made a change'

合并分支
$ git checkout master
$ git merge iss53
Merge made by recursive.
 README |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)


$ git push testing    把本地库的内容推送到远程




撤销修改
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
放弃所有的文件修改可以使用 git checkout .  命令

来自 <https://www.cnblogs.com/qufanblog/p/7606105.html> 

来自 <https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001374831943254ee90db11b13d4ba9a73b9047f4fb968d000> 



添加远程库、提交远程库
要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；
关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

来自 <https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013752340242354807e192f02a44359908df8a5643103a000> 





从远程库克隆到本地
假设我们从零开发，那么最好的方式是先创建远程库，然后，从远程库克隆。
要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆。
拉取远程库项目代码 : git clone 远程库的SSH地址
git clone git@code.ymmoa.com:DataStrategy/archimedes.git
拉取远程库项目下某一个分支代码  git clone -b 分支名称 远程库的SSH地址
git clone -b haonan_another git@code.ymmoa.com:DataStrategy/archimedes.git
Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。




1、打开你的GitHub，复制你的库的SSH
2、打开你的IDE的Terminal窗口，将目录切换到你准备放本地仓库的地址，输入 git clone SSH地址

来自 <https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375233990231ac8cf32ef1b24887a5209f83e01cb94b000> 


创建与合并分支
查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>
删除指定位置的文件夹： git rm 你要删除的文件夹 -r -f

来自 <https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840038939c291467cc7c747b1810aab2fb8863508000> 



解决冲突
当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。
解决冲突就是把Git合并失败的文件手动编辑为我们希望的内容，再提交。
用git log --graph命令可以看到分支合并图。
我们查看分支，分支很长的，如果我们想要退出来的话，按 wq 就可以退出分支的查看

来自 <https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840202368c74be33fbd884e71b570f2cc3c0d1dcf000> 

合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并

来自 <https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013758410364457b9e3d821f4244beb0fd69c61a185ae0000> 


当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop，回到工作现场。

来自 <https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137602359178794d966923e5c4134bc8bf98dfb03aea3000> 


开发一个新feature，最好新建一个分支；
 删除一个已经合并的分支 ：git branch -d feature-vulcan  
如果要丢弃一个没有被合并过的分支，可以通过git branch -D <name>强行删除。

来自 <https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001376026233004c47f22a16d1f4fa289ce45f14bbc8f11000> 

接下来看多人协作
多人协作
阅读: 499206

来自 <https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013760174128707b935b0be6fc4fc6ace66c4f15618f8d000> 





